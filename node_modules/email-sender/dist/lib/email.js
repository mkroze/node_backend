'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _nodemailer = require('nodemailer');

var _nodemailer2 = _interopRequireDefault(_nodemailer);

var _log = require('./log');

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var log = (0, _log2.default)('sendEmail');

var Sender = function () {
	_createClass(Sender, [{
		key: 'defaultOptions',
		get: function get() {
			return {
				from: '"Task Notice 👥" <admin@gmail.com>', // sender address
				to: '', // list of receivers
				subject: '📣 你有一个新的通知', // Subject line
				html: null,
				text: null
			};
		}
	}]);

	function Sender(options) {
		_classCallCheck(this, Sender);

		if (!options) throw new Error('options can not undefined.');
		this.options = options;
		this.transporter = _nodemailer2.default.createTransport(this.options);
		log.debug('sendEmail对象构造成功，你的参数为：%o', options);
	}

	_createClass(Sender, [{
		key: 'send',
		value: function send(options) {
			var _this = this;

			options = Object.assign({}, this.defaultOptions, options);
			log.debug('开始发送一封新邮件，请求参数为：%o', options);
			return new Promise(function (resolve, reject) {
				_this.transporter.sendMail(options, function (error, info) {
					if (error) {
						log.error('邮件发送失败');return reject(error);
					}
					log.debug('邮件发送成功');
					resolve(info);
				});
			});
		}
	}]);

	return Sender;
}();

module.exports = Sender;